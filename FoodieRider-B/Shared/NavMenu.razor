@using FoodieRider_B.Data.Models
@using FoodieRider_B.Data.Services
@inject CartState cartState
@inject ICartServices cartService
@inject NavigationManager NavigationManager
<div class="flex fixed flex-wrap place-items-center z-40">
    <section class="relative mx-auto">
        <!-- navbar -->
        <nav class="flex justify-between bg-gray-900 text-white w-screen">
            <div class="px-2 xl:px-12 h-12 max-h-14 flex w-full items-center">
                <a class="text-3xl font-bold font-heading" href="#">
                    <img class="h-10" src="images/logo_bg_s.png" alt="logo" />
                </a>
                <ul class="hidden md:flex max-w-screen-lg px-4 mx-auto font-semibold font-heading space-x-12">
                    <li class="group">
                        <a class="nav-element" href="/">Home</a>
                    </li>
                    <li class="group">
                        <a class="nav-element" href="/category">Categories</a>
                    </li>
                    <li class="group">
                        <a class="nav-element" href="/item">Items</a>
                    </li>
                    <li class="group">
                        <a class="nav-element" href="/about-us">About Us</a>
                    </li>
                </ul>
                <div class="hidden xl:flex space-x-5 items-center">
                    <button type="button">
                        <div class="relative py-3">
                            @if (cartState.IsUpdating == false)
                            {
                                <div class="t-0 absolute left-4">
                                    <p class="flex h-2 w-2 items-center justify-center rounded-full bg-red-500 p-3 text-xs text-white">
                                        @(cartState.CartCount.HasValue ? cartState.CartCount : 0)
                                    </p>
                                </div>
                            }
                            else
                            {
                                <div class="t-0 absolute left-4">
                                    <div class="animate-spin rounded-full h-5 bg-primary w-5 border-t-2 border-b-2 border-indigo-900"></div>
                                </div>

                            }
                            <img src="css/icons/iconify/cart-icon.svg" alt="cart" />
                        </div>
                    </button>
                    <button type="button" class="btn-indigo-500"
                            onclick="@ToggleAuthMenu">
                        <img src="css/icons/iconify/mdi-user.svg" alt="user" />
                    </button>
                </div>

            </div>

            <div class="xl:hidden flex mr-6 items-center">
                <button type="button">
                    <div class="relative py-3">
                        @if (cartState.IsUpdating == false)
                        {
                            <div class="t-0 absolute left-4">
                                <p class="flex h-2 w-2 items-center justify-center rounded-full bg-red-500 p-3 text-xs text-white">
                                    @(cartState.CartCount.HasValue ? cartState.CartCount : 0)
                                </p>
                            </div>
                        }
                        else
                        {
                            <div class="t-0 absolute left-4">
                                <div class="animate-spin rounded-full h-5 bg-primary w-5 border-t-2 border-b-2 border-indigo-900"></div>
                            </div>
                        }
                        <img src="css/icons/iconify/cart-icon.svg" alt="cart" />
                    </div>
                </button>
            </div>

            <button class="navbar-burger self-center mr-5 xl:hidden"
                    type="button"
                    @onclick="@ToggleNavMenu">
                <svg xmlns="http://www.w3.org/2000/svg"
                     class="h-6 w-6 hover:text-gray-200"
                     fill="none"
                     viewBox="0 0 24 24"
                     stroke="currentColor">
                    <path stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M4 6h16M4 12h16M4 18h16" />
                </svg>
            </button>
            @if (AuthOpen)
            {
                <ul class="hidden xl:block bg-gray-800 absolute top-16 right-0 flex flex-col items-center w-40 p-4 rounded-md z-10 shadow-sm"
                    @onmouseover="MouseIn" @onmouseout="MouseOut">
                    <li>
                        <a class="nav-element" href="/login">
                            Login
                        </a>
                    </li>
                    <hr class="w-full my-2" />
                    <li>
                        <a class="nav-element" href="/register">
                            Register
                        </a>
                    </li>
                </ul>
            }
        </nav>
    </section>
    @if (collapseNavMenu)
    {
        <div class="fixed top-0 mt-16 mr-2 ml-2 inset-0 overflow-hidden z-30">
            <div class="absolute inset-0 overflow-hidden">
                <div class="absolute inset-0 bg-slate-100 bg-opacity-75 transition-opacity"
                     aria-hidden="true">
                    <div class="mt-16 bg-gray-800  m-1 rounded-md shadow-md animate-fade">
                        <button class="nav-element m-1"
                                @onclick='()=>HandleNavigation("/")'>
                            Home
                        </button>

                        <a class="nav-element m-1"
                           @onclick='()=>HandleNavigation("/category")'>
                            Categories
                        </a>

                        <a @onclick='()=>HandleNavigation("/item")'
                           class="nav-element m-1">Items </a>
                        <a @onclick='()=>HandleNavigation("/about-us")' class="nav-element m-1">
                            About Us
                        </a>
                        @* {#if !user.token}
                    <a href="/login" class="nav-element m-1" >
                    Login
                    </a>
                    <a href="/register" class="nav-element m-1" >
                    Register
                    </a>
                    {:else}
                    <a href="/profile" class="nav-element m-1">
                    Profile
                    </a>
                    <a href="/logout" class="nav-element m-1" >
                    Logout
                    </a>
                    {/if} *@
                    </div>

                </div>
            </div>
        </div>
    }
</div>

@code {
    private bool collapseNavMenu = false;
    private int totalOrders = 0;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    public bool AuthOpen = false;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private void ToggleAuthMenu()
    {
        AuthOpen = !AuthOpen;

    }
    void HandleNavigation(string url)
    {
        // Update the collapseNavMenu state when the user clicks on an anchor
        collapseNavMenu = false;

        // Navigate to the specified URL
        NavigationManager.NavigateTo(url.ToString());

    }
    protected override async Task OnInitializedAsync()
    {
        await cartState.IntializeCart();
        cartState.OnChange += StateHasChanged;
    }
    void MouseIn()
    {
        AuthOpen = true;
    }
    void MouseOut()
    {
        AuthOpen = false;
    }
}
