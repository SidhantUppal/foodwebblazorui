@using FoodieRider_B.Data.Models
@using FoodieRider_B.Data.Services
@* <div class="top-row ps-3 navbar navbar-dark">
<div class="container-fluid">
<a class="navbar-brand" href="">FoodieRider-B</a>
<button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
<span class="navbar-toggler-icon"></span>
</button>
</div>
</div> *@

@* <div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu"> *@
    @inject CartState cartState
    @inject ICartServices cartService

<div class="flex fixed flex-wrap place-items-center z-50">
    <section class="relative mx-auto">
        <!-- navbar -->
        <nav class="flex justify-between bg-gray-900 text-white w-screen">
            <div class="px-2 xl:px-12 h-12 max-h-14 flex w-full items-center">
                <a class="text-3xl font-bold font-heading" href="#">
                    <!-- <img class="h-9" src="logo.png" alt="logo"> -->
                    @* <img class="h-12" src={smallLogo} alt="logo" /> *@
                </a>
                <ul class="hidden md:flex max-w-screen-lg px-4 mx-auto font-semibold font-heading space-x-12">
                    <li class="group">
                        <a class="nav-element" href="/">Home</a>
                    </li>
                    <li class="group">
                        <a class="nav-element" href="/category">Categories</a>
                    </li>
                    <li class="group">
                        <a class="nav-element" href="/item">Items</a>
                    </li>
                    <li class="group">
                        <a class="nav-element" href="/about-us">About Us</a>
                    </li>
                </ul>
                <div class="hidden xl:flex space-x-5 items-center">
                    <button type="button">
                        <div class="relative py-3">
                            @if (cartState.IsUpdating == false)
                            {
                                <div class="t-0 absolute left-4">
                                    <p class="flex h-2 w-2 items-center justify-center rounded-full bg-red-500 p-3 text-xs text-white">
                                        @(cartState.CartCount.HasValue ? cartState.CartCount : 0)
                                    </p>
                                </div>
                            }
                            else
                            {
                                <div class="t-0 absolute left-4">
                                    <div class="animate-spin rounded-full h-5 bg-primary w-5 border-t-2 border-b-2 border-indigo-900"></div>
                                </div>

                            }
                            <img src="css/icons/iconify/cart-icon.svg" alt="cart" />
                        </div>
                    </button>
                    <button type="button" class="btn-indigo-500">
                        <img src="css/icons/iconify/mdi-user.svg" alt="user" />
                    </button>
                </div>
                <div class="xl:hidden flex mr-6 items-center">
                    <button type="button">
                        <div class="relative py-3">
                            <div class="t-0 absolute left-4">
                                <p class="flex h-2 w-2 items-center justify-center rounded-full bg-red-500 p-3 text-xs text-white">
                                    @totalOrders
                                </p>
                            </div>
                            <img src="css/icons/iconify/cart-icon.svg" alt="cart" />
                        </div>
                    </button>
                </div>
                <button class="navbar-burger self-center mr-5 xl:hidden"
                        type="button">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         class="h-6 w-6 hover:text-gray-200"
                         fill="none"
                         viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="2"
                              d="M4 6h16M4 12h16M4 18h16" />
                    </svg>
                </button>
            </div>
        </nav>
    </section>
    <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

@* </div> *@

@code {
    private bool collapseNavMenu = true;
    private int totalOrders = 0;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override async Task OnInitializedAsync()
    {
        await cartState.IntializeCart();
        cartState.OnChange += StateHasChanged;
    }
}
